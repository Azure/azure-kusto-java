# This workflow will install the dependencies, run tests and lint every push

name: Build Java

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ '**' ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['11']
    name: Java ${{ matrix.java }}
    steps:
#      Uncomment to run locally with "act"
#      - name: Download Maven
#        run: |
#          curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.zip -o maven.zip
#          apt-get update
#          apt-get -y install unzip
#          unzip -d /usr/share maven.zip
#          rm maven.zip
#          ln -s /usr/share/apache-maven-3.8.4/bin/mvn /usr/bin/mvn
#          echo "M2_HOME=/usr/share/apache-maven-3.8.4" | tee -a /etc/environment
      - uses: actions/checkout@v2
      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Run the Maven verify phase
        #run: mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --batch-mode --update-snapshots formatter:validate verify
        run: mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --batch-mode --update-snapshots -Dmaven.test.skip=true verify
        env:
          DM_CONNECTION_STRING: https://ingest-sdkse2etest.eastus.kusto.windows.net
          ENGINE_CONNECTION_STRING: https://sdkse2etest.eastus.kusto.windows.net
          TEST_DATABASE: e2e
          APP_ID: ${{ secrets.APP_ID }}
          APP_KEY: ${{ secrets.APP_KEY }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          CI_EXECUTION: 1
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: |
            data/target/surefire-reports/*.xml
            ingest/target/surefire-reports/*.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
      - run: |
          version=${{ steps.get_version.outputs.VERSION }}
          mkdir staging
          for f in data/target/*.jar; do mv "$f" "staging/kusto-data-$version.jar"; done
          for f in ingest/target/*.jar; do mv "$f" "staging/kusto-ingest-$version.jar"; done 
          cp data/.flattened-pom.xml staging/kusto-data-$version.pom
          cp ingest/.flattened-pom.xml staging/kusto-ingest-$version.pom
      - uses: LanceMcCarthy/Action-AzureBlobUpload@v2
        name: Uploading to Azure storage...
        with:
          connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING}}
          container_name: ${{ secrets.AZURE_STORAGE_CONTAINER}}
          source_folder: staging
          destination_folder: kusto/java/test/${{ steps.get_version.outputs.VERSION }}
          delete_if_exists: true
